{
  "name": "xmljson",
  "description": "Translates between JSON and XML formats",
  "version": "0.2.0",
  "homepage": "https://github.com/ExactTarget/node-xmljson",
  "author": {
    "name": "ExactTarget",
    "email": "aalexander@exacttarget.com",
    "url": "http://code.exacttarget.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ExactTarget/node-xmljson.git"
  },
  "bugs": {
    "url": "https://github.com/ExactTarget/node-xmljson/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ExactTarget/node-xmljson/blob/master/COPYING"
    }
  ],
  "main": "lib",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.3.17"
  },
  "keywords": [
    "exacttarget xml json"
  ],
  "dependencies": {
    "xml2js": "~0.2.6",
    "xmlbuilder": "~0.4.2"
  },
  "readme": "# xmljson\n\nTranslates between JSON and XML formats\n\n[![Build Status](https://www.travis-ci.org/ExactTarget/node-xmljson.png?branch=master)](https://www.travis-ci.org/ExactTarget/node-xmljson)\n\n## Getting Started\nInstall the module with: `npm install xmljson`\n\n### Convert XML to JSON\n\n```javascript\n// Load the module\nvar to_json = require('xmljson').to_json;\n\n// An XML string\nvar xml = '' +\n\t'<data>' +\n\t\t'<prop1>val1</prop1>' +\n\t\t'<prop2>val2</prop2>' +\n\t\t'<prop3>val3</prop3>' +\n\t'</data>';\n\nto_json(xml, function (error, data) {\n\t// Module returns a JS object\n\tconsole.log(data);\n\t// -> { prop1: 'val1', prop2: 'val2', prop3: 'val3' }\n\n\t// Format as a JSON string\n\tconsole.log(JSON.stringify(data));\n\t// -> {\"prop1\":\"val1\",\"prop2\":\"val2\",\"prop3\":\"val3\"}\n});\n```\n\n### Convert JSON to XML\n\n```javascript\n// Load the module\nvar to_xml = require('xmljson').to_xml;\n\n// A JSON string\nvar json = '' +\n\t'{' +\n\t\t'\"prop1\":\"val1\",' +\n\t\t'\"prop2\":\"val2\",' +\n\t\t'\"prop3\":\"val3\"' +\n\t'}';\n\nto_xml(json, function (error, xml) {\n\t// Module returns an XML string\n\tconsole.log(xml);\n\t// -> <data><prop1>val1</prop1><prop2>val2</prop2><prop3>val3</prop3></data>\n});\n```\n\n## Release History\n\n_This module is semantically versioned: <http://semver.org>_\n\n### Version 0.2.0 `2013-07-27`\n\n* Support child elements where some have duplicate names and some do not\n\n### Version 0.1.0 `2013-05-29`\n\n* Initial release\n\n## Contributing\nBefore writing code, we suggest you [search for issues](https://github.com/ExactTarget/node-xmljson/issues?state=open)\nor [create a new one](https://github.com/ExactTarget/node-xmljson/issues/new) to confirm where your contribution fits into\nour roadmap.\n\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality.\nLint and test your code using [grunt](https://github.com/cowboy/grunt).\n\n##Authors\n\n**Adam Alexander**\n\n+ http://twitter.com/adamalex\n+ http://github.com/adamalex\n\n**Benjamin Dean**\n\n+ https://twitter.com/bdeanet\n+ https://github.com/creatovisguru\n\n## Copyright and license\n\nCopyright (c) 2013 ExactTarget\n\nLicensed under the MIT License (the \"License\");\nyou may not use this work except in compliance with the License.\nYou may obtain a copy of the License in the COPYING file.\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "readmeFilename": "README.md",
  "_id": "xmljson@0.2.0",
  "dist": {
    "shasum": "e2d121d13c682c6964f6ae9c1a0be8a3cce8866c",
    "tarball": "http://registry.npmjs.org/xmljson/-/xmljson-0.2.0.tgz"
  },
  "_from": "xmljson@^0.2.0",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "adamalex",
    "email": "adamalex@gmail.com"
  },
  "maintainers": [
    {
      "name": "adamalex",
      "email": "adamalex@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "e2d121d13c682c6964f6ae9c1a0be8a3cce8866c",
  "_resolved": "https://registry.npmjs.org/xmljson/-/xmljson-0.2.0.tgz"
}
